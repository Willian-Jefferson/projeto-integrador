<?xml version="1.0" encoding="UTF-8" ?>

<Form version="1.8" maxVersion="1.9" type="org.netbeans.modules.form.forminfo.JFrameFormInfo">
  <NonVisualComponents>
    <Component class="javax.swing.JLabel" name="jLabel3">
      <Properties>
        <Property name="text" type="java.lang.String" value="jLabel3"/>
      </Properties>
    </Component>
  </NonVisualComponents>
  <Properties>
    <Property name="defaultCloseOperation" type="int" value="3"/>
  </Properties>
  <SyntheticProperties>
    <SyntheticProperty name="formSizePolicy" type="int" value="1"/>
    <SyntheticProperty name="generateCenter" type="boolean" value="false"/>
  </SyntheticProperties>
  <AuxValues>
    <AuxValue name="FormSettings_autoResourcing" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_autoSetComponentName" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_generateFQN" type="java.lang.Boolean" value="true"/>
    <AuxValue name="FormSettings_generateMnemonicsCode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_i18nAutoMode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_layoutCodeTarget" type="java.lang.Integer" value="1"/>
    <AuxValue name="FormSettings_listenerGenerationStyle" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_variablesLocal" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_variablesModifier" type="java.lang.Integer" value="2"/>
    <AuxValue name="designerSize" type="java.awt.Dimension" value="-84,-19,0,5,115,114,0,18,106,97,118,97,46,97,119,116,46,68,105,109,101,110,115,105,111,110,65,-114,-39,-41,-84,95,68,20,2,0,2,73,0,6,104,101,105,103,104,116,73,0,5,119,105,100,116,104,120,112,0,0,3,-24,0,0,3,-22"/>
  </AuxValues>

  <Layout class="org.netbeans.modules.form.compat2.layouts.DesignAbsoluteLayout">
    <Property name="useNullLayout" type="boolean" value="false"/>
  </Layout>
  <SubComponents>
    <Component class="javax.swing.JButton" name="jButton3">
      <Properties>
        <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
          <Font name="Tahoma" size="24" style="0"/>
        </Property>
        <Property name="text" type="java.lang.String" value="&lt;"/>
      </Properties>
      <Events>
        <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="jButton3ActionPerformed"/>
      </Events>
      <Constraints>
        <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignAbsoluteLayout" value="org.netbeans.modules.form.compat2.layouts.DesignAbsoluteLayout$AbsoluteConstraintsDescription">
          <AbsoluteConstraints x="30" y="490" width="-1" height="80"/>
        </Constraint>
      </Constraints>
    </Component>
    <Component class="javax.swing.JButton" name="jButton2">
      <Properties>
        <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
          <Font name="Tahoma" size="24" style="0"/>
        </Property>
        <Property name="text" type="java.lang.String" value="&gt;"/>
      </Properties>
      <Events>
        <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="jButton2ActionPerformed"/>
      </Events>
      <Constraints>
        <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignAbsoluteLayout" value="org.netbeans.modules.form.compat2.layouts.DesignAbsoluteLayout$AbsoluteConstraintsDescription">
          <AbsoluteConstraints x="930" y="490" width="-1" height="80"/>
        </Constraint>
      </Constraints>
    </Component>
    <Component class="javax.swing.JButton" name="jButton1">
      <Properties>
        <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
          <Font name="Tahoma" size="18" style="0"/>
        </Property>
        <Property name="text" type="java.lang.String" value="Voltar"/>
      </Properties>
      <Events>
        <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="jButton1ActionPerformed"/>
      </Events>
      <Constraints>
        <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignAbsoluteLayout" value="org.netbeans.modules.form.compat2.layouts.DesignAbsoluteLayout$AbsoluteConstraintsDescription">
          <AbsoluteConstraints x="840" y="920" width="90" height="30"/>
        </Constraint>
      </Constraints>
    </Component>
    <Component class="javax.swing.JLabel" name="jLabel1">
      <Properties>
        <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
          <Font name="Tahoma" size="48" style="1"/>
        </Property>
        <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
          <Color blue="ff" green="ff" red="ff" type="rgb"/>
        </Property>
        <Property name="text" type="java.lang.String" value="PHP"/>
      </Properties>
      <Constraints>
        <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignAbsoluteLayout" value="org.netbeans.modules.form.compat2.layouts.DesignAbsoluteLayout$AbsoluteConstraintsDescription">
          <AbsoluteConstraints x="400" y="90" width="-1" height="-1"/>
        </Constraint>
      </Constraints>
    </Component>
    <Component class="javax.swing.JLabel" name="jLabel2">
      <Properties>
        <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
          <Font name="Tahoma" size="36" style="1"/>
        </Property>
        <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
          <Color blue="ff" green="ff" red="ff" type="rgb"/>
        </Property>
        <Property name="text" type="java.lang.String" value="Compara&#xe7;&#xe3;o"/>
      </Properties>
      <Constraints>
        <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignAbsoluteLayout" value="org.netbeans.modules.form.compat2.layouts.DesignAbsoluteLayout$AbsoluteConstraintsDescription">
          <AbsoluteConstraints x="350" y="150" width="-1" height="-1"/>
        </Constraint>
      </Constraints>
    </Component>
    <Container class="javax.swing.JScrollPane" name="jScrollPane2">
      <AuxValues>
        <AuxValue name="autoScrollPane" type="java.lang.Boolean" value="true"/>
      </AuxValues>
      <Constraints>
        <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignAbsoluteLayout" value="org.netbeans.modules.form.compat2.layouts.DesignAbsoluteLayout$AbsoluteConstraintsDescription">
          <AbsoluteConstraints x="150" y="260" width="660" height="540"/>
        </Constraint>
      </Constraints>

      <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
      <SubComponents>
        <Component class="javax.swing.JTextArea" name="jTextArea2">
          <Properties>
            <Property name="columns" type="int" value="20"/>
            <Property name="lineWrap" type="boolean" value="true"/>
            <Property name="rows" type="int" value="5"/>
            <Property name="text" type="java.lang.String" value="     Operadores de compara&#xe7;&#xe3;o, como os seus nomes implicam, permitem que voc&#xea; compare dois valores. Voc&#xea; pode se interessar em ver as tabelas de compara&#xe7;&#xe3;o de tipos, que tem exemplo das v&#xe1;rias compara&#xe7;&#xf5;es entre tipos relacionadas.&#xa;&#xa;     Operadores de compara&#xe7;&#xe3;o&#xa;&#xa; Exemplo:&#x9;Nome:&#x9;                        Resultado:&#xa; $a == $b&#x9;Igual&#x9;                        Verdadeiro (true) se $a &#xe9; igual a $b.&#xa; $a === $b&#x9;Id&#xea;ntico                        Verdadeiro (true) se $a &#xe9; igual a $b, e eles s&#xe3;o do mesmo tipo.&#xa; $a != $b&#x9;Diferente                       Verdadeiro se $a n&#xe3;o &#xe9; igual a $b.&#xa; $a &lt;&gt; $b&#x9;Diferente                       Verdadeiro se $a n&#xe3;o &#xe9; igual a $b.&#xa; $a !== $b&#x9;N&#xe3;o id&#xea;ntico&#x9;                Verdadeiro de $a n&#xe3;o &#xe9; igual a $b, ou eles n&#xe3;o s&#xe3;o do mesmo tipo.&#xa; $a &lt; $b&#x9;Menor que                &#x9;Verdadeiro se $a &#xe9; estritamente menor que $b.&#xa; $a &gt; $b&#x9;Maior que&#x9;                Verdadeiro se $a &#xe9; estritamente maior que $b.&#xa; $a &lt;= $b&#x9;Menor ou igual&#x9;                Verdadeiro se $a &#xe9; menor ou igual a $b.&#xa; $a &gt;= $b&#x9;Maior ou igual&#x9;                Verdadeiro se $a &#xe9; maior ou igual a $b.&#xa; $a &lt;=&gt; $b&#x9;Spaceship (nave espacial)&#x9;Um integer menor que, igual a ou maior que zero quando $a &#xe9;, respectivamente, menor que, igual a ou maior que $b.&#xa;&#xa;      Se comparar um n&#xfa;mero com uma string ou com strings num&#xe9;ricas, cada string &#xe9; convertido para um n&#xfa;mero e ent&#xe3;o a compara&#xe7;&#xe3;o &#xe9; realizada numericamente. Essas regras tamb&#xe9;m se aplicam a instru&#xe7;&#xe3;o switch. As convers&#xf5;es de tipo n&#xe3;o s&#xe3;o realizadas quando a compara&#xe7;&#xe3;o utilizada &#xe9; === ou !== por esse tipo de compara&#xe7;&#xe3;o envolver valores e tipos.&#xa;&#xa;    &lt;?php&#xa;    var_dump(0 == &quot;a&quot;); // 0 == 0 -&gt; true&#xa;    var_dump(&quot;1&quot; == &quot;01&quot;); // 1 == 1 -&gt; true&#xa;    var_dump(&quot;10&quot; == &quot;1e1&quot;); // 10 == 10 -&gt; true&#xa;    var_dump(100 == &quot;1e2&quot;); // 100 == 100 -&gt; true&#xa;&#xa;    switch (&quot;a&quot;) {&#xa;    case 0:&#xa;              echo &quot;0&quot;;&#xa;              break;&#xa;    case &quot;a&quot;: // nunca &#xe9; alcan&#xe7;ado porque &quot;a&quot; j&#xe1; foi combinado com 0&#xa;              echo &quot;a&quot;;&#xa;              break;&#xa;    }&#xa;    ?&gt;&#xa;&#xa;    &lt;?php&#xa;    // Integers&#xa;    echo 1 &lt;=&gt; 1; // 0&#xa;    echo 1 &lt;=&gt; 2; // -1&#xa;    echo 2 &lt;=&gt; 1; // 1&#xa;&#xa;    // Floats&#xa;    echo 1.5 &lt;=&gt; 1.5; // 0&#xa;    echo 1.5 &lt;=&gt; 2.5; // -1&#xa;    echo 2.5 &lt;=&gt; 1.5; // 1&#xa;&#xa;    // Strings&#xa;    echo &quot;a&quot; &lt;=&gt; &quot;a&quot;; // 0&#xa;    echo &quot;a&quot; &lt;=&gt; &quot;b&quot;; // -1&#xa;    echo &quot;b&quot; &lt;=&gt; &quot;a&quot;; // 1&#xa;&#xa;    echo &quot;a&quot; &lt;=&gt; &quot;aa&quot;; // -1&#xa;    echo &quot;zz&quot; &lt;=&gt; &quot;aa&quot;; // 1&#xa;&#xa;   // Arrays&#xa;   echo [] &lt;=&gt; []; // 0&#xa;   echo [1, 2, 3] &lt;=&gt; [1, 2, 3]; // 0&#xa;   echo [1, 2, 3] &lt;=&gt; []; // 1&#xa;   echo [1, 2, 3] &lt;=&gt; [1, 2, 1]; // 1&#xa;   echo [1, 2, 3] &lt;=&gt; [1, 2, 4]; // -1&#xa;&#xa;  // Objects&#xa;  $a = (object) [&quot;a&quot; =&gt; &quot;b&quot;];&#xa;  $b = (object) [&quot;a&quot; =&gt; &quot;b&quot;];&#xa;  echo $a &lt;=&gt; $b; // 0&#xa;&#xa;  $a = (object) [&quot;a&quot; =&gt; &quot;b&quot;];&#xa;  $b = (object) [&quot;a&quot; =&gt; &quot;c&quot;];&#xa;  echo $a &lt;=&gt; $b; // -1&#xa;&#xa;  $a = (object) [&quot;a&quot; =&gt; &quot;c&quot;];&#xa;  $b = (object) [&quot;a&quot; =&gt; &quot;b&quot;];&#xa;  echo $a &lt;=&gt; $b; // 1&#xa;&#xa;  // only values are compared&#xa;  $a = (object) [&quot;a&quot; =&gt; &quot;b&quot;];&#xa;  $b = (object) [&quot;b&quot; =&gt; &quot;b&quot;];&#xa;  echo $a &lt;=&gt; $b; // 1&#xa;&#xa;  ?&gt;&#xa;&#xa;    Para v&#xe1;rios tipos, compara&#xe7;&#xf5;es s&#xe3;o feitas de acordo com a seguinte tabela (em ordem).&#xa;&#xa;    Compara&#xe7;&#xe3;o com v&#xe1;rios tipos&#xa;&#xa;Tipo do 1&#xba; operando&#x9;   Tipo do 2&#xba; operando&#x9;   Resultado&#xa;null ou string&#x9;                                string&#x9;                               Converte null para &quot;&quot;, num&#xe9;rico ou compara&#xe7;&#xe3;o l                                                                                                                         &#xe9;xica &#xa;bool or null&#x9;                                qualquer&#x9;                               Converte para bool, false &lt; true&#xa;object                                                  object&#x9;                               Classes nativas podem definir como s&#xe3;o compa                                                                                                                        radas, classes diferentes s&#xe3;o incompar&#xe1;veis, m                                                                                                                        esma classe - compara propriedades&#xa;                                                                                                                       igual faz arrays, tem sua explica&#xe7;&#xe3;o&#xa;string, resource ou mumber          string, resource ou number        Transforma strings e resource &#xa;array&#x9;                                array&#x9;                               Array com menos membros &#xe9; menor, se a chave                                                                                                                       do operando 1 n&#xe3;o &#xe9; encontrada no operando 2,                                                                                                                        ent&#xe3;o os arrayss&#xe3;o incompar&#xe1;veis, caso contr&#xe1;ri                                                                                                                        o - compara valor por valor.&#xa;object&#x9;                                qualquer&#x9;                              object &#xe9; sempre maior&#xa;array&#x9;                                qualquer&#x9;                               array &#xe9; sempre maior&#xa;&#xa;    &#xa;       Exemplo #1 Compara&#xe7;&#xf5;es de boolean e null&#xa;&#xa;   &lt;?php&#xa;   // Bool e null s&#xe3;o sempre comparados como booleanos&#xa;   var_dump(1 == TRUE);  // TRUE - same as (bool)1 == TRUE&#xa;   var_dump(0 == FALSE); // TRUE - same as (bool)0 == FALSE&#xa;   var_dump(100 &lt; TRUE); // FALSE - same as (bool)100 &lt; TRUE&#xa;   var_dump(-10 &lt; FALSE);// FALSE - same as (bool)-10 &lt; FALSE&#xa;   var_dump(min(-100, -10, NULL, 10, 100)); // NULL - (bool)NULL &lt; (bool)-100 is FALSE &lt; TRUE&#xa;   ?&gt;&#xa; &#xa;      Exemplo #2 Transcri&#xe7;&#xe3;o do padr&#xe3;o de compara&#xe7;&#xe3;o de array&#xa;&#xa;   &lt;?php&#xa;   // Arrays s&#xe3;o comparados assim quando utilizando-se os operadores padr&#xe3;o&#xa;   function standard_array_compare($op1, $op2)&#xa;   {&#xa;       if (count($op1) &lt; count($op2)) {&#xa;          return -1; // $op1 &lt; $op2&#xa;   }   elseif (count($op1) &gt; count($op2)) {&#xa;         return 1; // $op1 &gt; $op2&#xa;   }&#xa;     foreach ($op1 as $key =&gt; $val) {&#xa;         if (!array_key_exists($key, $op2)) {&#xa;             return null; // uncomparable&#xa;         } elseif ($val &lt; $op2[$key]) {&#xa;            return -1;&#xa;         } elseif ($val &gt; $op2[$key]) {&#xa;             return 1;&#xa;         }&#xa;     }&#xa;     return 0; // $op1 == $op2&#xa; }&#xa; ?&gt;&#xa; &#xa; &#xa;      Aviso:&#xa;&#xa;     Comparison of floating point numbers&#xa;&#xa;     Por conta da forma que floats s&#xe3;o representados internamente n&#xe3;o se deve testar dois floats com o comparador de igualdade.&#xa;    Veja a documenta&#xe7;&#xe3;o de float para mais detalhes.&#xa;&#xa;    Operador Tern&#xe1;rio &#xb6;&#xa;&#xa;Outro operador condicional &#xe9; o operador &quot;?:&quot; (ou tern&#xe1;rio).&#xa;&#xa;   Exemplo #3 Atribuindo um valor padr&#xe3;o&#xa;&#xa;  &lt;?php&#xa;  // Example usage for: Ternary Operator&#xa;  $action = (empty($_POST[&apos;action&apos;])) ? &apos;default&apos; : $_POST[&apos;action&apos;];&#xa;&#xa;  // The above is identical to this if/else statement&#xa;  if (empty($_POST[&apos;action&apos;])) {&#xa;     $action = &apos;default&apos;;&#xa;  } else {&#xa;     $action = $_POST[&apos;action&apos;];&#xa;  }&#xa;&#xa; ?&gt;&#xa;&#xa;   A express&#xe3;o (expr1) ? (expr2) : (expr3) &#xe9; avaliada para expr2 se expr1 &#xe9; avaliada como true, ou expr3 se expr1 &#xe9; avaliada como false.&#xa;Desde o PHP 5.3 &#xe9; poss&#xed;vel deixar vazia a parte central do operador tern&#xe1;rio. A   express&#xe3;o expr1 ?: expr3 retorna expr1 se expr1 verdade true e expr3 do contr&#xe1;rio.&#xa;&#xa;   Nota: Note que o operador tern&#xe1;rio &#xe9; uma express&#xe3;o, e ele n&#xe3;o &#xe9; avaliado para uma vari&#xe1;vel, mas para o resultado de uma express&#xe3;o. Isto &#xe9; importante saber se voc&#xea; quer retornar uma vari&#xe1;vel por refer&#xea;ncia. A declara&#xe7;&#xe3;o return $var == 42 ? $a : $b; em uma fun&#xe7;&#xe3;o que retorna por refer&#xea;ncia conseq&#xfc;&#xea;ntemente n&#xe3;o ir&#xe1; &#xa;      funcionar e ser&#xe1; avisado.&#xa;&#xa;  Nota:&#xa;&#xa;   &#xc9; recomendado para evitar &quot;stacking&quot; de express&#xf5;es tern&#xe1;rias. O comportamento do PHP quando usando mais de um operador tern&#xe1;rio no &#xfa;nico comando n&#xe3;o &#xe9; &#xf3;bvio:&#xa;&#xa;      Exemplo #4 Comportamento n&#xe3;o &#xf3;bvio do tern&#xe1;rio&#xa;&#xa; &lt;?php&#xa; // o seguinte aparenta imprimir &apos;true&apos;&#xa; echo (true?&apos;true&apos;:false?&apos;t&apos;:&apos;f&apos;);&#xa;&#xa; // conteudo, a sa&#xed;da acima &#xe9; &apos;t&apos;&#xa; // isto por causa da express&#xe3;o tern&#xe1;rio se avaliada da esquerda pra direita&#xa;&#xa; // o seguinte &#xe9; a vers&#xe3;o mais &#xf3;bvia do mesmo c&#xf3;digo acima&#xa; echo ((true ? &apos;true&apos; : &apos;false&apos;) ? &apos;t&apos; : &apos;f&apos;);&#xa;&#xa; // aqui, voc&#xea; pode ver que a primeira express&#xe3;o &#xe9; avaliada para &apos;true&apos;, que&#xa; // por sua vez avalia para (bool)true, assim retornando a parte true da&#xa; // segunda express&#xe3;o tern&#xe1;ria.&#xa; ?&gt;&#xa; Operador Null Coalescing &#xb6;&#xa; Existe ainda o operador &quot;??&quot; (ou null coalescing), dispon&#xed;vel desde o PHP 7.&#xa;&#xa; Exemplo #5 Atribuindo um valor padr&#xe3;o&#xa;&#xa; &lt;?php&#xa; // Exemplo do operador Null Coalesce&#xa; $action = $_POST[&apos;action&apos;] ?? &apos;default&apos;;&#xa;&#xa; // O conte&#xfa;do acima &#xe9; id&#xea;ntico &#xe0; essa declara&#xe7;&#xe3;o if/else&#xa; if (isset($_POST[&apos;action&apos;])) {&#xa;     $action = $_POST[&apos;action&apos;];&#xa; } else {&#xa;     $action = &apos;default&apos;;&#xa; }&#xa;&#xa; ?&gt;&#xa;&#xa;     A express&#xe3;o (expr1) ?? (expr2) &#xe9; avaliada para expr2 se expr1 for null, e expr1 do contr&#xe1;rio.&#xa;Esse operador em particular n&#xe3;o emite aviso caso o valor da esquerda n&#xe3;o exista, assim como isset(). Sendo especialmente &#xfa;til em chaves de arrays.&#xa;&#xa;    Nota: Note que o operador null coalescing &#xe9; uma express&#xe3;o, e ele n&#xe3;o &#xe9; avaliado para uma vari&#xe1;vel, mas para o resultado de uma express&#xe3;o. Isto &#xe9; importante saber se voc&#xea; quer retornar uma vari&#xe1;vel por refer&#xea;ncia. A declara&#xe7;&#xe3;o return $foo ?? $bar; em uma fun&#xe7;&#xe3;o que retorna por refer&#xea;ncia conseq&#xfc;&#xea;ntemente n&#xe3;o ir&#xe1; funcionar e ser&#xe1; avisado.&#xa;&#xa;  Nota:&#xa;&#xa;    Note que o operador null coalescing permite a cria&#xe7;&#xe3;o de aninhamentos simples:&#xa;&#xa;  Exemplo #6 Aninhando o operador null coalescing&#xa;&#xa; &lt;?php&#xa;&#xa; $foo = null;&#xa; $bar = null;&#xa; $baz = 1;&#xa; $qux = 2;&#xa;&#xa; echo $foo ?? $bar ?? $baz ?? $qux; // exibe 1&#xa;&#xa; ?&gt;"/>
          </Properties>
        </Component>
      </SubComponents>
    </Container>
    <Component class="javax.swing.JLabel" name="jLabel4">
      <Properties>
        <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
          <Image iconType="3" name="/img/Tapet-navy-silver.jpg"/>
        </Property>
        <Property name="text" type="java.lang.String" value="jLabel4"/>
      </Properties>
      <Constraints>
        <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignAbsoluteLayout" value="org.netbeans.modules.form.compat2.layouts.DesignAbsoluteLayout$AbsoluteConstraintsDescription">
          <AbsoluteConstraints x="0" y="0" width="1000" height="-1"/>
        </Constraint>
      </Constraints>
    </Component>
  </SubComponents>
</Form>
