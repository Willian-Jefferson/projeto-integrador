/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package php;

import php.*;
import php.*;
import php.*;

/**
 *
 * @author ALUNO
 */
public class switchphp extends javax.swing.JFrame {

    /**
     * Creates new form ifphp
     */
    public switchphp() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();

        jLabel3.setText("jLabel3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton3.setText("<");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 460, -1, 90));

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton2.setText(">");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 470, -1, 90));

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setText("Voltar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 920, 90, 30));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("PHP");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 100, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("switch");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 170, -1, -1));

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.setText("    A declaração switch é similar a uma série de declarações IF na mesma expressão. Em muitos casos, \nse deseja comparar as mesmas variáveis (ou expressões), com diferentes valores, e executar pedaços \ndiferentes de código dependendo de qual valor ela é igual. Esta é exatamente a serventia da declaração switch.\n\n    Nota: Note que ao contrário de outras linguagens, a declaração continue aplica-se ao switch e age similarmente \nao break. Se possuir um switch dentro de um laço, e deseja continuar na próxima iteração do laço externo, utilize \ncontinue 2.\n\n   Nota:\n\n   Note que o switch/case faz comparação frouxa.\n\n   Os dois exemplos a seguir demonstram duas formas diferentes de escrever a mesma coisa, uma usando uma série \nde declarações if e elseif, e a outra usando a declaração switch:\n\n  \n     Exemplo #1 Estrutura do switch\n\n  \n   <?php\n   if ($i == 0) {\n       echo \"i é igual a 0\";\n   } elseif ($i == 1) {\n       echo \"i é igual a 1\";\n   } elseif ($i == 2) {\n       echo \"i é igual a 2\";\n   }\n\n   switch ($i) {\n      case 0:\n           echo \"i é igual a 0\";\n           break;\n      case 1:\n           echo \"i é igual a 1\";\n           break;\n      case 2:\n           echo \"i é igual a 2\";\n           break;\n  }\n  ?>\n\n  \n     Exemplo #2 A estrutura do switch permite o uso de strings\n\n  \n   <?php\n   switch ($i) {\n      case \"maçã\":\n          echo \"i é maçã\";\n          break;\n      case \"bar\":\n          echo \"i é bar\";\n          break;\n      case \"bolo\":\n         echo \"i é bolo\";\n         break;\n  }\n  ?>\n \n   É importante entender como a declaração switch é executada a fim de evitar enganos. A declação switch \nexecuta linha por linha (na verdade, declaração por declaração). No início nenhum código é executado. Somente \nquando uma declaração case é encontrada, cuja expressão avalia um valor que corresponde ao valor do switch, \no PHP começará a executar a declaração. O PHP continuará a executar a declaração até o fim do bloco switch, \nou até a primeira declaração break encontrada. Se não for escrita uma declaração break ao final da lista de \ndeclarações do case, o PHP continuará executando as declarações dos próximos cases. Por exemplo:\n\n   <?php\n    switch ($i) {\n       case 0:\n          echo \"i é igual a 0\";\n       case 1:\n          echo \"i é igual a 1\";\n       case 2:\n          echo \"i é igual a 2\";\n  }\n  ?>\n\n \n     Neste exemplo, se a variável $i for igual a 0, o PHP executará todos as declarações echo! Se a variável $i for igual a 1, \no PHP executará as duas últimas declarações echo. Somente se obterá o comportamento esperado ('i equals 2' será exibido), \nse $i for igual a 2. Sendo assim, é importante não esquecer as declarações break (mesmo quando se quer evitar, de propósito, \nsua omissão em certas circunstâncias).\n\n    Em uma declaração switch, a condição é avaliada somente uma vez, e o resultado é comparado a cada declaração case. Em uma d\neclaração elseif. a condição é avaliada outra vez. Se a condição for mais complicada que uma simples comparação e/ou está em um \nlaço pequeno, a declaração switch pode ser mais rápida.\n\n    A lista de declarações de um case também podem estar vazia, passando o controle da lista de declarações para o próximo case.\n\n   \n   <?php\n   switch ($i) {\n      case 0:\n      case 1:\n      case 2:\n           echo \"i é menor que 3 mas não é negativo\";\n           break;\n      case 3:\n           echo \"i é 3\";\n   }\n   ?>\n\n   \n    Um case especial é o default. Este case corresponde a tudo que não foi correspondido pelos outros cases. Por exemplo:\n\n\n    <?php\n    switch ($i) {\n        case 0:\n          echo \"i é igual a 0\";\n          break;\n       case 1:\n          echo \"i é igual a 1\";\n          break;\n       case 2:\n          echo \"i é igual a 2\";\n          break;\n       default:\n          echo \"i não é igual a 0, 1 ou 2\";\n   }\n   ?>\n\n   \n    Nota: Múltiplos casos padrões irão emitir um erro E_COMPILE_ERROR.\n\n    A sintaxe alternativa das estruturas de controle é suportada por switches. Para mais informações, veja Sintaxe \nalternativa para estruturas de controle.\n\n   \n   <?php\n   switch ($i):\n       case 0:\n          echo \"i é igual a 0\";\n          break;\n       case 1:\n          echo \"i é igual a 1\";\n          break;\n       case 2:\n          echo \"i é igual a 2\";\n          break;\n       default:\n          echo \"i não é igual a 0, 1 ou 2\";\n   endswitch;\n   ?>\n\n\n   É possível utilizar o ponto e vírgula ao invés dos dois pontos em um case, como:\n\n\n   <?php\n   switch($cerveja)\n  {\n       case 'amstel';\n       case 'stella artois';\n       case 'heineken';\n          echo 'Boa escolha';\n          break;\n      default;\n         echo 'Por favor faça uma nova seleção...';\n         break;\n  }\n  ?>");
        jScrollPane2.setViewportView(jTextArea2);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 260, 660, 540));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Tapet-navy-silver.jpg"))); // NOI18N
        jLabel4.setText("jLabel4");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // voltar
        
         this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // tela else php
        
        new elsephp().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        //tela if php
        
        new ifphp().setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(switchphp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(switchphp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(switchphp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(switchphp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new switchphp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables
}
