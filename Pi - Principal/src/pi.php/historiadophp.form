<?xml version="1.0" encoding="UTF-8" ?>

<Form version="1.3" maxVersion="1.9" type="org.netbeans.modules.form.forminfo.JFrameFormInfo">
  <NonVisualComponents>
    <Component class="javax.swing.JLabel" name="jLabel3">
      <Properties>
        <Property name="text" type="java.lang.String" value="jLabel3"/>
      </Properties>
    </Component>
  </NonVisualComponents>
  <Properties>
    <Property name="defaultCloseOperation" type="int" value="3"/>
  </Properties>
  <SyntheticProperties>
    <SyntheticProperty name="formSizePolicy" type="int" value="1"/>
    <SyntheticProperty name="generateCenter" type="boolean" value="false"/>
  </SyntheticProperties>
  <AuxValues>
    <AuxValue name="FormSettings_autoResourcing" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_autoSetComponentName" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_generateFQN" type="java.lang.Boolean" value="true"/>
    <AuxValue name="FormSettings_generateMnemonicsCode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_i18nAutoMode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_layoutCodeTarget" type="java.lang.Integer" value="1"/>
    <AuxValue name="FormSettings_listenerGenerationStyle" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_variablesLocal" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_variablesModifier" type="java.lang.Integer" value="2"/>
    <AuxValue name="designerSize" type="java.awt.Dimension" value="-84,-19,0,5,115,114,0,18,106,97,118,97,46,97,119,116,46,68,105,109,101,110,115,105,111,110,65,-114,-39,-41,-84,95,68,20,2,0,2,73,0,6,104,101,105,103,104,116,73,0,5,119,105,100,116,104,120,112,0,0,3,-24,0,0,3,-23"/>
  </AuxValues>

  <Layout class="org.netbeans.modules.form.compat2.layouts.DesignAbsoluteLayout">
    <Property name="useNullLayout" type="boolean" value="false"/>
  </Layout>
  <SubComponents>
    <Component class="javax.swing.JButton" name="jButton1">
      <Properties>
        <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
          <Font name="Tahoma" size="18" style="0"/>
        </Property>
        <Property name="text" type="java.lang.String" value="Voltar"/>
      </Properties>
      <Events>
        <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="jButton1ActionPerformed"/>
      </Events>
      <Constraints>
        <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignAbsoluteLayout" value="org.netbeans.modules.form.compat2.layouts.DesignAbsoluteLayout$AbsoluteConstraintsDescription">
          <AbsoluteConstraints x="840" y="920" width="90" height="30"/>
        </Constraint>
      </Constraints>
    </Component>
    <Component class="javax.swing.JLabel" name="jLabel1">
      <Properties>
        <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
          <Font name="Tahoma" size="48" style="1"/>
        </Property>
        <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
          <Color blue="ff" green="ff" red="ff" type="rgb"/>
        </Property>
        <Property name="text" type="java.lang.String" value="PHP"/>
      </Properties>
      <Constraints>
        <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignAbsoluteLayout" value="org.netbeans.modules.form.compat2.layouts.DesignAbsoluteLayout$AbsoluteConstraintsDescription">
          <AbsoluteConstraints x="380" y="100" width="-1" height="-1"/>
        </Constraint>
      </Constraints>
    </Component>
    <Component class="javax.swing.JLabel" name="jLabel2">
      <Properties>
        <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
          <Font name="Tahoma" size="36" style="1"/>
        </Property>
        <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
          <Color blue="ff" green="ff" red="ff" type="rgb"/>
        </Property>
        <Property name="text" type="java.lang.String" value="Hist&#xf3;ria"/>
      </Properties>
      <Constraints>
        <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignAbsoluteLayout" value="org.netbeans.modules.form.compat2.layouts.DesignAbsoluteLayout$AbsoluteConstraintsDescription">
          <AbsoluteConstraints x="360" y="170" width="-1" height="-1"/>
        </Constraint>
      </Constraints>
    </Component>
    <Container class="javax.swing.JScrollPane" name="jScrollPane2">
      <AuxValues>
        <AuxValue name="autoScrollPane" type="java.lang.Boolean" value="true"/>
      </AuxValues>
      <Constraints>
        <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignAbsoluteLayout" value="org.netbeans.modules.form.compat2.layouts.DesignAbsoluteLayout$AbsoluteConstraintsDescription">
          <AbsoluteConstraints x="150" y="260" width="660" height="540"/>
        </Constraint>
      </Constraints>

      <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
      <SubComponents>
        <Component class="javax.swing.JTextArea" name="jTextArea2">
          <Properties>
            <Property name="columns" type="int" value="20"/>
            <Property name="lineWrap" type="boolean" value="true"/>
            <Property name="rows" type="int" value="5"/>
            <Property name="text" type="java.lang.String" value="        O PHP como &#xe9; conhecido hoje, &#xe9; na verdade o sucessor para um produto chamado PHP/FI. Criado em 1994 por Rasmus Lerdof, a primeira encarna&#xe7;&#xe3;o do PHP foi um simples conjunto de bin&#xe1;rios Common Gateway Interface (CGI) escrito em linguagem de programa&#xe7;&#xe3;o C. Originalmente usado para acompanhamento de visitas para seu curr&#xed;culo online, ele nomeou o conjunto de scripts de &quot;Personal Home Page Tools&quot; mais frequentemente referenciado como &quot;PHP Tools.&quot; Ao longo do tempo, mais funcionalidades foram desejadas, e Rasmus reescreveu o PHP Tools, produzindo uma maior e rica implementa&#xe7;&#xe3;o. Este novo modelo foi capaz de intera&#xe7;&#xf5;es com Banco de Dados e mais, fornecendo uma estrutura no qual os usu&#xe1;rios poderiam desenvolver simples e din&#xe2;micas aplica&#xe7;&#xf5;es web, como um livros de visitas. Em Junho de 1995, Rasmus &#xbb; liberou o c&#xf3;digo fonte do PHP Tools para o p&#xfa;blico, o que permitiu que desenvolvedores usassem da forma como desejassem. Isso permitiu - e encorajou - usu&#xe1;rios a fornecerem corre&#xe7;&#xf5;es para bugs no c&#xf3;digo, e em geral, aperfei&#xe7;o&#xe1;-lo.&#xa;&#xa;        Em Setembro do mesmo ano, Rasmus expandiu o PHP e - por um breve per&#xed;odo - mudou o nome PHP. Agora referindo-se a ferramenta como FI, abrevia&#xe7;&#xe3;o para &quot;Forms Interpreter&quot;, a nova implementa&#xe7;&#xe3;o incluiu algumas funcionalidades b&#xe1;sicas do PHP como bem conhecemos hoje. Tinha vari&#xe1;veis no estilo Perl, interpreta&#xe7;&#xe3;o autom&#xe1;tica de vari&#xe1;veis de formul&#xe1;rios, e sintaxe HTML embutida. A sintaxe em si era muito similar com a do Perl, por&#xe9;m muito mais limitada, simples, e um pouco inconsistente. De fato, para embutir o c&#xf3;digo em um arquivo HTML, desenvolvedores tinham que usar coment&#xe1;rios HTML. Embora este m&#xe9;todo n&#xe3;o sido inteiramente bem-recebido, FI continuou a desfrutar um crescimento e aceita&#xe7;&#xe3;o como uma ferramente CGI --- mas ainda n&#xe3;o como uma linguagem. Contudo, isso come&#xe7;ou a mudar no m&#xea;s seguinte; em Outubro, 1995 Rasmus liberou um completa reescrita do c&#xf3;digo. Trazendo de volta o nome PHP, estava agora (brevemente) nomeado &quot;Personal Home Page Contruction Kit&quot; e foi o primeiro lan&#xe7;amento a vangloriar-se que era, na &#xe9;poca, considerado um avan&#xe7;ado script de interface. A linguagem foi desenvolvida para, deliberadamente, ser parecida com C, tornando-a f&#xe1;cil para ser adotada por desenvolvedores habituados com C, Perl e linguagens similares. Tendo sido at&#xe9; este momento exclusiva para sistemas UNIX e sistemas compat&#xed;veis com POSIX, o potencial para uma implementa&#xe7;&#xe3;o em um Windows NT come&#xe7;ava a ser explorada.&#xa;&#xa;       O c&#xf3;digo tem outra reforma completa, e em Abril de 1996, combinando os nomes dos &#xfa;ltimos lan&#xe7;amentos, Rasmus introduziu o PHP/FI. Esta segunda gera&#xe7;&#xe3;o da implementa&#xe7;&#xe3;o come&#xe7;ou a realmente evoluir o PHP de um conjunto de ferramentas para sua pr&#xf3;pria linguagem de programa&#xe7;&#xe3;o. Ele inclu&#xed;a suporte embutido dos banco de dados DBM, mSQL, e Postgres95, cookies, fun&#xe7;&#xf5;es de apoio definidas pelo usu&#xe1;rio, e muito mais. Em Junho, PHP/FI ganhou o status de vers&#xe3;o 2.0. Um interessante fato sobre isso, por&#xe9;m, &#xe9; que existia apenas um &#xfa;nica completa vers&#xe3;o do PHP 2.0. Quando finalmente se tornou um status beta em Novembro, 1997, o mecanismo de an&#xe1;lise suvbjacente j&#xe1; estava interiramente reescrito.&#xa;&#xa;      Apesar de ter tido um curto per&#xed;odo de desenvolvimento, ele continuava defrutar uma crescente popularidade em um ainda jovem mundo web desenvolvimento, Em 1997 e 1998, PHP/FI teve o apoio de milhares de usu&#xe1;rios ao redor do mundo. Uma pesquisa Netcraft de Maio de 1998, indicou que cerca de 60.000 dom&#xed;nios relataram ter cabe&#xe7;alhos contendo &quot;PHP&quot;, indicando que o servidor de hospedagem de fato tinha o PHP instalado. Este n&#xfa;mero pode ser equiparado com aproximadamente 1% de todos os dom&#xed;nios da Internet da &#xe9;poca. Apesar destes n&#xfa;meros impressionantes, o amadurecimento do PHP/FI foi condenado a limita&#xe7;&#xf5;es; enquanto haviam v&#xe1;rios contribuintes menores, ainda era desenvolvido principalmente por uma &#xfa;nica pessoa.&#xa;&#xa;       Exemplo #1 Exemplo de c&#xf3;digo PHP/FI&#xa;&#xa;   &lt;!--include /text/header.html--&gt;&#xa;&#xa;   &lt;!--getenv HTTP_USER_AGENT--&gt;&#xa;   &lt;!--ifsubstr $exec_result Mozilla--&gt;&#xa;      Hey, you are using Netscape!&lt;p&gt;&#xa;   &lt;!--endif--&gt;&#xa;&#xa;   &lt;!--sql database select * from table where user=&apos;$username&apos;--&gt;&#xa;   &lt;!--ifless $numentries 1--&gt;&#xa;     Sorry, that record does not exist&lt;p&gt;&#xa;   &lt;!--endif exit--&gt;&#xa;     Welcome &lt;!--$user--&gt;!&lt;p&gt;&#xa;     You have &lt;!--$index:0--&gt; credits left in your account.&lt;p&gt;&#xa;&#xa;   &lt;!--include /text/footer.html--&gt;&#xa;&#xa;&#xa;      PHP 3 &#xb6;&#xa;&#xa;       PHP 3.0 foi a primeira vers&#xe3;o que se assemelha com o PHP como existe hoje. PHP/FI se encontrava ainda ineficiente e n&#xe3;o tinha recursos que precisava para prover uma aplica&#xe7;&#xe3;o eCommerce que estavam desenvolvendo para um projeto da Universidade, Andi Gutmans e Zeev Suraski de Tel Aviv, Israel, come&#xe7;aram outra completa reescrita do interpretador em 1997. Abordando Rasmus online, eles discutiram v&#xe1;rios aspectos para a corrente implementa&#xe7;&#xe3;o e redesenvolvimento do PHP. Em um esfor&#xe7;o para melhorar a engine e iniciar a constru&#xe7;&#xe3;o em cima da base de usu&#xe1;rios existentes do PHP/FI, Andi, Rasmus, e Zeev decidiram colaborar no desenvolvimento de uma nova e independente linguagem de programa&#xe7;&#xe3;o. Essa nova linguagem foi lan&#xe7;ada com um novo nome, que removeu a impress&#xe3;o do limitado uso pessoal que o nome PHP/FI 2.0 tinha mantido. Foi renomeado simplesmente para &apos;PHP&apos;, com o significado se tornando um acr&#xf4;nimo recursivo - PHP: Hypertext Preprocessor.&#xa;&#xa;      Um dos maiores pontos fortes do PHP 3.0 foram os fortes recursos de extensibilidade. Al&#xe9;m de fornecer a usu&#xe1;rios finais uma interface robusta para m&#xfa;ltiplos banco de dados, protocolos, e APIs, a facilidade de estender a sua pr&#xf3;pria linguagem atraiu dezenas de desenvolvedores que submeteram uma variedade de m&#xf3;dulos. Indiscutivelmente esta foi a chave para o PHP 3.0 ter sido um tremendo sucesso. Outro recurso chave foi introduzido no PHP 3.0 incluindo o suporte a programa&#xe7;&#xe3;o orientada a objeto e a uma mais poderosa e consistente sintaxe de linguagem.&#xa;&#xa;     Em junho de 1998, com muitos novos desenvolvedores ao redor do mundo unindo esfor&#xe7;os, PHP 3.0 foi anunciado pelo novo time de desenvolvimento do PHP como o sucessor oficial para o PHP/FI 2.0. As melhorias no PHP/FI 2.0, cessaram em Novembro do ano anterior e agora foi oficialmente finalizado. Depois de nove meses de testes abertos ao p&#xfa;blico, quando o an&#xfa;ncio do lan&#xe7;amento oficial do PHP 3.0 chegou, prontamente foi instalado em 70.000 dom&#xed;nios em todo mundo, e j&#xe1; n&#xe3;o era mais limitado ao sistemas operacionais compat&#xed;veis ao POSIX. Uma parcela relativamente pequena de dom&#xed;nios informaram que o PHP foi instalado em um host com servidores executando Windows 95, 98 e NT, Macintosh. E em seu pico, PHP 3.0 foi instalado em aproximadamente 10% dos servidores web da internet.&#xa;&#xa;     PHP 4 &#xb6;&#xa;&#xa;     No inverno de 1998, logo ap&#xf3;s o PHP 3.0 ter sido oficialmente lan&#xe7;ado, Andi Gutmans e Zeev Suraski come&#xe7;aram a trabalhar em uma reescrita do core do PHP. Os objetivos do projeto eram melhorar performance das aplica&#xe7;&#xf5;es complexas, e melhorar a modulariza&#xe7;&#xe3;o do c&#xf3;digo base do PHP. Tais aplica&#xe7;&#xf5;es s&#xf3; foram poss&#xed;veis pelos novos recursos e suporte para uma ampla variedades de banco de dados de terceiros e APIs do PHP 3.0, mas o PHP 3.0 n&#xe3;o foi projetado para trabalhar com aplica&#xe7;&#xf5;es complexas de forma eficiente.&#xa;&#xa;     O novo motor, chamado &apos;Zend Engine&apos; (composto pelos primeiros nome, Zeev e Andi), alcan&#xe7;ou os objetivos do projeto com sucesso, e foi introduzido em meados de 1999. O PHP 4.0 baseado neste motor, e uma variedade de novos recursos adicionais, foi oficialmente lan&#xe7;ado em Maio de 2000, quase dois anos ap&#xf3;s seu antecessor. Al&#xe9;m da alt&#xed;ssima melhoria da performance nesta vers&#xe3;o, o PHP 4.0 incluiu outros recursos chaves, tais como suporte para maioria dos servidores web, sess&#xf5;es HTTP, sa&#xed;das de buffering, mais maneiras seguras para manipular dados de entrada de usu&#xe1;rios e diversas novas constru&#xe7;&#xf5;es de linguagem.&#xa;&#xa;     PHP 5 &#xb6;&#xa;&#xa;     O PHP 5 foi lan&#xe7;ado em Julho de 2004 ap&#xf3;s um longo desenvolvimento e v&#xe1;rios pr&#xe9;-lan&#xe7;amentos. Principalmente impulsionado pelo seu core o Zend Engine 2.0 com um novo modelo de objeto e dezenas de outros novos recursos.&#xa;&#xa;     O time de desenvolvimento PHP inclui dezenas de desenvolvedores, tamb&#xe9;m dezenas de outros trabalhando em algo relacionado ao PHP e apoio a projetos como PEAR, PECL, documenta&#xe7;&#xe3;o, infra-estrutura de rede subjacente de bem mais de uma centena de servidores web em seis dos sete continentes do mundo. Embora seja apenas uma estimativa baseada sobre estat&#xed;sticas de anos anteriores, &#xe9; seguro presumir que o PHP est&#xe1; agora instalado em dezenas, ou mesmo talvez centenas, de milh&#xf5;es de dom&#xed;nios em todo mundo."/>
          </Properties>
        </Component>
      </SubComponents>
    </Container>
    <Component class="javax.swing.JLabel" name="jLabel4">
      <Properties>
        <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
          <Image iconType="3" name="/img/Tapet-navy-silver.jpg"/>
        </Property>
        <Property name="text" type="java.lang.String" value="jLabel4"/>
      </Properties>
      <Constraints>
        <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignAbsoluteLayout" value="org.netbeans.modules.form.compat2.layouts.DesignAbsoluteLayout$AbsoluteConstraintsDescription">
          <AbsoluteConstraints x="0" y="0" width="1000" height="-1"/>
        </Constraint>
      </Constraints>
    </Component>
  </SubComponents>
</Form>
